{{ $firehoseClientSecret :=  default (randAlphaNum 64) .Values.firehoseExporter.uaa.clientSecret }}
---
{{- if semverCompare ">=1.16" (printf "%s.%s" .Capabilities.KubeVersion.Major (trimSuffix "+" .Capabilities.KubeVersion.Minor) )}}
apiVersion: apps/v1
{{- else }}
apiVersion: apps/v1beta1
{{- end }}
kind: Deployment
metadata:
  name: "{{ .Release.Name }}-nginx"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name:  "stratos-metrics"
      app.kubernetes.io/component: "stratos-metrics-nginx"
      app.kubernetes.io/instance: "{{ .Release.Name }}"
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "stratos-metrics"
        app.kubernetes.io/instance: "{{ .Release.Name }}"
        app.kubernetes.io/version: "{{ .Chart.AppVersion }}"
        app.kubernetes.io/component: "stratos-metrics-nginx"
        helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
    spec:
      containers:
      - image: {{.Values.dockerRepository}}/{{.Values.dockerOrganization}}/{{.Values.nginx.image}}:{{.Values.imageTag}}
        imagePullPolicy: {{.Values.imagePullPolicy}}
        name: nginx
        env:
        - name: USERNAME
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-metrics-credentials
              key: username
        - name: PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-metrics-credentials
              key: password
        ports:
        - containerPort: 443
          name: https
          protocol: TCP
        volumeMounts:
        - name: ssl-cert
          mountPath: /etc/secrets
          readOnly: true
        - name: nginx-config
          mountPath: /etc/nginx/conf.d/
  {{- if .Values.firehoseExporter.enabled }}
      initContainers:
      - name: setup-uaa
        image: {{.Values.dockerRepository}}/{{.Values.dockerOrganization}}/{{.Values.firehoseExporter.initContainerImage}}:{{.Values.imageTag}} 
        imagePullPolicy: {{.Values.imagePullPolicy}}
        env:
        - name: SKIP_SSL_VALIDATION
          value: "{{ template "uaaSkipSslVerification" . }}"
        - name: UAA_ADMIN
          value: "{{ template "uaaAdminClient" . }}"
        - name: UAA_ADMIN_SECRET
          value: "{{ template "uaaAdminClientSecret" . }}"
        - name: PROMETHEUS_CLIENT
          value: "{{ .Values.firehoseExporter.uaa.client }}"
        - name: PROMETHEUS_CLIENT_SECRET
          value: "{{ $firehoseClientSecret }}"
        - name : UAA_AUTHORITY
          value: "doppler.firehose"
        - name: ZONE
          valueFrom:
            configMapKeyRef:
              name: {{ .Release.Name }}-endpoint-config
              key: zone
        - name: ROOT_UAA_ENDPOINT
          valueFrom:
            configMapKeyRef:
              name: {{ .Release.Name }}-endpoint-config
              key: root_uaa_endpont
        - name: DOPPLER_ENDPOINT
          valueFrom:
            configMapKeyRef:
              name: {{ .Release.Name }}-endpoint-config
              key: doppler_endpoint
        - name: UAA_ENDPOINT
          valueFrom:
            configMapKeyRef:
              name: {{ .Release.Name }}-endpoint-config
              key: uaa_endpoint


  {{- end }}
      {{- if and .Values.kube.registry.username .Values.kube.registry.password }}
      imagePullSecrets:
      - name: {{.Values.dockerRegistrySecret}}
      {{- end }}
      volumes:
      - name: ssl-cert
        secret:
        {{- if .Values.nginx.tls }}
          secretName: "{{ .Values.nginx.tls }}"
        {{- else }}
          secretName: "{{ .Release.Name }}-nginx-tls"
        {{- end }}
      - name: nginx-config
        configMap:
          name: "{{ .Release.Name }}-stratos-metrics-config"
          items:
          - key: nginx-config
            path: nginx.conf
          - key: nginx-metadata
            path: metadata.json

{{- if .Values.firehoseExporter.enabled }}
{{ $releaseName := .Release.Name }}
{{ $firehoseExporter := .Values.firehoseExporter }}
{{ $appVersion := .Chart.AppVersion }}
{{ $helmChartName :=  .Chart.Name }}
{{ $helmChartVersion :=  .Chart.Version }}
{{ $values :=  .Values }}
{{ $dot := . }}
{{ $caps := .Capabilities }}
  {{- range int .Values.firehoseExporter.instances | until }}

---
{{- if semverCompare ">=1.16" (printf "%s.%s" $caps.KubeVersion.Major (trimSuffix "+" $caps.KubeVersion.Minor) )}}
apiVersion: apps/v1
{{- else }}
apiVersion: apps/v1beta1
{{- end }}
kind: Deployment
metadata:
  name: "{{ $releaseName }}-firehose-exporters-{{ . }}"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name:  "stratos-metrics"
      app.kubernetes.io/component: "stratos-metrics-firehose-exporters-{{ . }}"
      app.kubernetes.io/instance: "{{ $releaseName }}"
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "stratos-metrics"
        app.kubernetes.io/instance: "{{ $releaseName }}"
        app.kubernetes.io/version: "{{ $appVersion }}"
        app.kubernetes.io/component: "stratos-metrics-firehose-exporters-{{ . }}"
        helm.sh/chart: "{{ $helmChartName }}-{{ $helmChartVersion | replace "+" "_" }}"
    spec:
      containers:
      - image: {{$values.dockerRepository}}/{{$values.dockerOrganization}}/{{$values.firehoseExporter.image}}:{{$values.imageTag}}
        imagePullPolicy: {{ $values.imagePullPolicy }}
        name: firehose-exporter
        env:
        - name: FIREHOSE_EXPORTER_UAA_URL
          valueFrom:
            configMapKeyRef:
              name: {{$releaseName}}-endpoint-config
              key: uaa_endpoint
        - name: FIREHOSE_EXPORTER_UAA_CLIENT_ID
          value: "{{ $values.firehoseExporter.uaa.client }}"
        - name: FIREHOSE_EXPORTER_UAA_CLIENT_SECRET
          value: "{{ $firehoseClientSecret }}"
        - name: FIREHOSE_EXPORTER_DOPPLER_SUBSCRIPTION_ID
          value: "{{ $releaseName }}-prometheus"
        - name: FIREHOSE_EXPORTER_DOPPLER_URL
          valueFrom:
            configMapKeyRef:
              name: {{$releaseName}}-endpoint-config
              key: doppler_endpoint
        - name: FIREHOSE_EXPORTER_LOGGING_URL
          valueFrom:
            configMapKeyRef:
              name: {{$releaseName}}-endpoint-config
              key: doppler_endpoint
        - name: FIREHOSE_EXPORTER_METRICS_ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: {{$releaseName}}-endpoint-config
              key: doppler_endpoint
        - name: FIREHOSE_EXPORTER_SKIP_SSL_VERIFY
          value: "{{ template "uaaSkipSslVerification" $dot }}"
        ports:
        - containerPort: 9186
          name: fh-exp
          protocol: TCP
     {{- if and $values.kube.registry.username $values.kube.registry.password }}
      imagePullSecrets:
      - name: {{ $values.dockerRegistrySecret}}
     {{- end }}
   
  {{- end }}
{{- end }}
