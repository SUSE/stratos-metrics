# Default values for stratos-metrics
dockerRepository: docker.io
dockerOrganization: splatform
dockerRegistrySecret: regsecret
imageTag: opensuse
imagePullPolicy: IfNotPresent

metrics:
  # Preferred way of setting username and password for the nginx server that fronts Prometheus
  username: metrics
  password: s3cr3t
  # Metrics service
  service:
    annotations: []
    externalIPs: []
    loadBalancerIP:
    loadBalancerSourceRanges: []
    servicePort: 443
    #nodePort: 30000
    type: ClusterIP
    externalName:
    ingress:
      ## If true, Ingress will be created
      enabled: false
      ## Additional annotations
      annotations: {}
      ## Additional labels
      extraLabels: {}
      ## Host for the ingress
      # Defaults to metrics.[env.Domain] if env.Domain is set and host is not
      host:
      # Name of secret containing TLS certificate
      secretName:
      # crt and key for TLS Certificate (this chart will create the secret based on these)
      tls:
        crt:
        key:

  # Deprecated - use metrics.service.externalIPs
  externalIP:
kubernetes:
  apiEndpoint:
  # authEndpoint is deprecated - use apiEndpoint
  authEndpoint:

# Image for the config job
configJob:
  image: stratos-metrics-firehose-init

# Use by both the Firehose Exporter and the CF Exporter
cloudFoundry:
  # URL of the Cloud Foundry API endpoint
  apiEndpoint:
  # Admin Client for the UAA
  uaaAdminClient: admin
  # Admin Client Secret for the UAA
  uaaAdminClientSecret:
  # Skip SSL verification when communicating with CF and UAA
  skipSslVerification: "true"

# Configuration for the Cloud Foundry Firehose Exporter
# The firehose exporter collects data from Cloud Foundry and sends it to Prometheus
firehoseExporter:
  enabled: true
  instances: 1
  # URL of the Doppler Endpoint - takes precendence if set over the API Endpoint
  dopplerUrl:
  uaa:
    client: prometheus-firehose-exporter
    # Leave blank to generate a random secret
    clientSecret:
  # Do not change these
  image: stratos-metrics-firehose-exporter
  initContainerImage: stratos-metrics-firehose-init

cfExporter:
  enabled: false
  uaa:
    client: prometheus-cf-exporter
    # Leave blank to generate a random secret
    clientSecret:
  # Do not change these
  image: stratos-metrics-cf-exporter
  initContainerImage: stratos-metrics-firehose-init

nginx:
  image: stratos-metrics-nginx
  # Name of secret to use for TLS rather than a self-signed certificate
  tls:
  # Alternative to secret name is supplying cert and key directly here
  ssl:
    cert:
    certKey:

 # SCF values compatability 
env:
  # If DOMAIN is set, the CF API Endpoint will fallback to https://api.DOMAIN if not set
  DOMAIN:
kube:
  # Kubernetes Cluster domain (default is cluster.local)
  clusterDomain:
  auth: "rbac"
  external_metrics_port: 7443
  registry:
    password:
    username:
secrets:
  UAA_ADMIN_CLIENT_SECRET:

# Values for the Prometheus sub-chart
prometheus:
  imagePullSecrets:
  alertmanager:
    enabled: false
  pushgateway:
    enabled: false
  configmapReload:
    prometheus:
      image:
        repository: splatform/stratos-metrics-configmap-reload
        tag: opensuse
  initChownData:
    image:
      repository: splatform/stratos-metrics-init-chown-data
      tag: opensuse
  kubeStateMetrics:
    enabled: false
  kube-state-metrics:
    image:
      repository: splatform/stratos-metrics-kube-state-metrics
      tag: opensuse
  nodeExporter:    
    enabled: false
    image:
      repository: splatform/stratos-metrics-node-exporter
      tag: opensuse
  server:
    name: prometheus
    configMapOverrideName: stratos-metrics-config
    image:
      repository: splatform/stratos-metrics-prometheus
      tag: opensuse
    replicaCount: 1
    service:
      servicePort: 9090
    strategy:
      type: RollingUpdate
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
  serviceAccounts:
    alertmanager:
      create: false
    pushgateway:
      create: false

  serverFiles:
    alerts: {}
    rules: {}

services:
  loadbalanced: false

# useLb is deprecated
useLb: false
