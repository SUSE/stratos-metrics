# Default values for stratos-metrics
dockerRepository: docker.io
dockerOrganization: splatform
dockerRegistrySecret: regsecret
imageTag: opensuse
imagePullPolicy: IfNotPresent

metrics:
  # Preferred way of setting username and password for the nginx server that fronts Prometheus
  username: metrics
  password: s3cr3t
  # Metrics service
  service:
    annotations: []
    externalIPs: []
    loadBalancerIP:
    loadBalancerSourceRanges: []
    servicePort: 443
    #nodePort: 30000
    type: ClusterIP
    externalName:
  # Deprecated - use metrics.service.externalIPs
  externalIP:
kubernetes:
  apiEndpoint:
  # authEndpoint is deprecated - use apiEndpoint
  authEndpoint:

# Image for the config job
configJob:
  image: stratos-metrics-firehose-init

# Use by both the Firehose Exporter and the CF Exporter
cloudFoundry:
  # URL of the Cloud Foundry API endpoint
  apiEndpoint:
  # Admin Client for the UAA
  uaaAdminClient: admin
  # Admin Client Secret for the UAA
  uaaAdminClientSecret:
  # Skip SSL verification when communicating with CF and UAA
  skipSslVerification: "true"

# Configuration for the Cloud Foundry Firehose Exporter
# The firehose exporter collects data from Cloud Foundry and sends it to Prometheus
firehoseExporter:
  enabled: true
  instances: 1
  # URL of the Doppler Endpoint - takes precendence if set over the API Endpoint
  dopplerUrl:
  uaa:
    client: prometheus-firehose-exporter
    # Leave blank to generate a random secret
    clientSecret:
  # Do not change these
  image: stratos-metrics-firehose-exporter
  initContainerImage: stratos-metrics-firehose-init

cfExporter:
  enabled: false
  uaa:
    client: prometheus-cf-exporter
    # Leave blank to generate a random secret
    clientSecret:
  # Do not change these
  image: stratos-metrics-cf-exporter
  initContainerImage: stratos-metrics-firehose-init

nginx:
  image: stratos-metrics-nginx
  # Name of secret to use for TLS rather than a self-signed certificate
  tls:
  ssl:
    cert: |
      -----BEGIN CERTIFICATE-----
      MIIDXTCCAkWgAwIBAgIJAJooOiQWl1v1MA0GCSqGSIb3DQEBCwUAMEUxCzAJBgNV
      BAYTAkFVMRMwEQYDVQQIDApTb21lLVN0YXRlMSEwHwYDVQQKDBhJbnRlcm5ldCBX
      aWRnaXRzIFB0eSBMdGQwHhcNMTcwNjIzMTQ1MDM5WhcNMTgwNjIzMTQ1MDM5WjBF
      MQswCQYDVQQGEwJBVTETMBEGA1UECAwKU29tZS1TdGF0ZTEhMB8GA1UECgwYSW50
      ZXJuZXQgV2lkZ2l0cyBQdHkgTHRkMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIB
      CgKCAQEA1ffskodMWczONUmpW35pNXFsFD/UGEvzCsXHme64f62JaEWYiK/WoDhy
      gjUnRU0m/UU03+5nBRj3T10ONrjq85Vbvz3itR5b9rRH+8xQTJstHRFgdz5B9pLx
      43GExyBwuAqcu7fSkZUQkN8gBjyxcwrKYM9So/IBLtf7Rhejg6/qr3WNnfAVUQhK
      qywBXnxCgA4kIRJKxbQY83XPBXIBcdRH5xsBDX0d9Tsre/v9G/BaiU//CvhpVzEJ
      iTzRDjca2C/v8Q7MxcPwInAFM9Vz+iKsu6+grDFoiNh3hql+meET1nmSE7q+dIOA
      Z58Enk5BYsOxJN/fmyuesIL0S3CKSwIDAQABo1AwTjAdBgNVHQ4EFgQUXucATEFh
      8s94Mg1+J/aP8potwhMwHwYDVR0jBBgwFoAUXucATEFh8s94Mg1+J/aP8potwhMw
      DAYDVR0TBAUwAwEB/zANBgkqhkiG9w0BAQsFAAOCAQEAGroqi6rKMjw3mCtr6dAU
      WgGXiO96ADRzRchdp+gpHTVtybKAa1n13MAs/tl7HKUBQWwvDqPlqAAmBtCDKhfh
      N8SiI8PxScaCE2NcJCJDHwxs2CucUSAIf99w+WIZ0pF2IC+73GTCR+p9Kwb5bN04
      8vN/7YQTMwNk7GxkKas9QPR9/6rvPHLGPYvPx8mOW6HbYaWdPavJAI/XAYPxnfid
      uQuNfXXbhJyxN1BUi1Kt+KkVCyG+CY0jJNbO7lTsiJSzcstLykSxTX1bw0jIvEWa
      LdXmd/Dyu/EVzgOYnEPiZmHbha4KuVsb0dtAQIT8hmVRXIIOIbndERBduxeVMkLm
      fw==
      -----END CERTIFICATE-----
    certKey: |
      -----BEGIN PRIVATE KEY-----
      MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDV9+ySh0xZzM41
      Salbfmk1cWwUP9QYS/MKxceZ7rh/rYloRZiIr9agOHKCNSdFTSb9RTTf7mcFGPdP
      XQ42uOrzlVu/PeK1Hlv2tEf7zFBMmy0dEWB3PkH2kvHjcYTHIHC4Cpy7t9KRlRCQ
      3yAGPLFzCspgz1Kj8gEu1/tGF6ODr+qvdY2d8BVRCEqrLAFefEKADiQhEkrFtBjz
      dc8FcgFx1EfnGwENfR31Oyt7+/0b8FqJT/8K+GlXMQmJPNEONxrYL+/xDszFw/Ai
      cAUz1XP6Iqy7r6CsMWiI2HeGqX6Z4RPWeZITur50g4BnnwSeTkFiw7Ek39+bK56w
      gvRLcIpLAgMBAAECggEBANNJuycGy/JxN7+POdnLfoDzu9JTJVHIzft5Sp1LCo2q
      A+Ift3xihwI4O3swmdLpWPMJACmQ9dIm0TBhp8OJ3xkiCDNVHSXVEOMRK3QOUc0T
      /vyRSDz4EZM3j/0VABTSh/x1HkiQQTLZjD5C1xDRpjkAEtB+ahDSzTBAvzR761AA
      +y3fQz59jUwEoC1fOmzd333brgUGG3rwaqdg5qyXQBQH3k2RC10r9GXoc5fvkwO7
      M2n2rW3WdytT3Yhb+Cvv+EZsJVs6lX8dyQcdfFLP9ivBjzRbNTxm6sA1vnmq0xf4
      7ixC8MJk/N9ZRRGTcohxS97AfsnFqwqOTeGPrsdqFqECgYEA/5IHgr8ubnmTJ0ep
      0+n69jqVQkfMJ0/sPlXP/+1yywYxkf6kSm8JXboa1W+j3vsRMRYUWAQVLp8ALrLk
      x3aQG024CayryabcdFPrfdbdQV1Ik+8RYae34uKiOgyOJVyy96YuqM4QCvqY5GYp
      u+rthafJq4kGAzU6Pli7yI3ZsM8CgYEA1lP+YBHotCR993jXGa0OIwmqI7+n9EWV
      k/ubNxutEqXE+VL4hXrWWn9mLD4MJ9y+umppTdzEawUcM9MoVD7eeQUwkgMiDlUd
      2c62pHHStYyKHaY85Zp1yovFDDjtROErXT9+fXcDAxSP0MOapEC9tToY1seVfJLH
      pj/U52ONlcUCgYEAnCUzU43NJ5A9+QzO1Puq6k/Gq9VEBWzOUROK3rnLngFtvd5P
      sG6A0XQIOwlXnL/WtB/iVBhCfNaGfQGtx7RHvXbRj4+g8bZyENzJD3x8eBgvZLr2
      6qxXLFb9eOv82RT2/1nYPiiQIrUTPtCwhPC3KCboj1ZLhyA5MqhyKsmIDH8CgYAb
      nV7dCfGtpDYGuK8eQ8nagdhGGt+M/Zo0IurwwsQd7vXeGe6jZBxSNK/5a1UtnaeF
      ZUiEG7nDADmOA9riX+dSOHT1mym8JwNdmOC3d2LquVziTRTzkF805aVR2dPYWBq6
      PQATMk5VC0UsZMd7+kt3GjExGy4Liu3mYbsQxSbs8QKBgDPoTR3a39cjp4KgMS4z
      9nRT5DV72/GE5N7EDrDHrhpUyW0qkM4UcJ5Vi+c4EywzOgtYbFknSsXbYnVAkFDr
      42qv5Z0qoLTOch+GVuj0ZF1UgJh+RJWom7lPhTS0UP+VZFBc++nGl7PGTRflm3Zd
      mEVvEQxyBz3V1fZ0Yz246W60
      -----END PRIVATE KEY-----
      
 # SCF values compatability 
env:
  # If DOMAIN is set, the CF API Endpoint will fallback to https://api.DOMAIN if not set
  DOMAIN:
kube:
  auth: "rbac"
  external_metrics_port: 7443
  registry:
    password:
    username:
secrets:
  UAA_ADMIN_CLIENT_SECRET:

# Values for the Prometheus sub-chart
prometheus:
  imagePullSecrets:
  alertmanager:
    enabled: false
  pushgateway:
    enabled: false
  configmapReload:
    image:
      repository: splatform/stratos-metrics-configmap-reload
      tag: opensuse
  initChownData:
    image:
      repository: splatform/stratos-metrics-init-chown-data
      tag: opensuse
  kubeStateMetrics:
    enabled: false
    image:
      repository: splatform/stratos-metrics-kube-state-metrics
      tag: opensuse
  nodeExporter:    
    enabled: false
    image:
      repository: splatform/stratos-metrics-node-exporter
      tag: opensuse
  server:
    name: prometheus
    configMapOverrideName: stratos-metrics-config
    image:
      repository: splatform/stratos-metrics-prometheus
      tag: opensuse
    replicaCount: 1
    service:
      servicePort: 9090
  serviceAccounts:
    alertmanager:
      create: false
    pushgateway:
      create: false

  serverFiles:
    alerts: {}
    rules: {}

services:
  loadbalanced: false

# useLb is deprecated
useLb: false
