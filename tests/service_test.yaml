suite: test stratos metrics external service
templates:
  - service.yaml
tests:
  - it: should be a Service
    asserts:
      - isKind:
          of: Service
      - equal:
          path: kind
          value: Service
  - it: should have default ClusterIP configuration
    asserts:
      - hasDocuments:
          count: 1
      - equal:
          path: spec.type
          value: ClusterIP
      - contains:
          path: spec.ports
          content:
            name: nginx
            port: 443
            protocol: TCP
            targetPort: 443
  - it: should allow ClusterIP configuration with servicePort override
    set:
      metrics.service.servicePort: 12443
    asserts:
      - hasDocuments:
          count: 1
      - equal:
          path: spec.type
          value: ClusterIP
      - contains:
          path: spec.ports
          content:
            name: nginx
            port: 12443
            protocol: TCP
            targetPort: 443
  - it: should allow nodePort configuration
    set:
      metrics.service.type: NodePort
    asserts:
      - equal:
          path: spec.type
          value: NodePort
      - contains:
          path: spec.ports
          content:
            name: nginx
            port: 443
            protocol: TCP
            targetPort: 443
  - it: should allow nodePort configuration port override
    set:
      metrics.service.type: NodePort
      metrics.service.nodePort: 12345
    asserts:
      - equal:
          path: spec.type
          value: NodePort
      - contains:
          path: spec.ports
          content:
            name: nginx
            nodePort: 12345
            port: 443
            protocol: TCP
            targetPort: 443
  - it: should have Cluser IP set
    set:
      metrics.service.clusterIP: 5.6.7.8
    asserts:
      - hasDocuments:
          count: 1
      - equal:
          path: spec.clusterIP
          value: 5.6.7.8
  - it: should have LoadBalancer configuration
    set:
      useLb: true
    asserts:
      - hasDocuments:
          count: 1
      - equal:
          path: spec.type
          value: LoadBalancer
  - it: should have LoadBalancer configuration with IP
    set:
      metrics.service.type: LoadBalancer
      metrics.service.loadBalancerIP: 1.2.3.4
    asserts:
      - hasDocuments:
          count: 1
      - equal:
          path: spec.type
          value: LoadBalancer
      - equal:
          path: spec.loadBalancerIP
          value: 1.2.3.4
  - it: should have LoadBalancer configuration (Legacy)
    set:
      services.loadbalanced: true
    asserts:
      - hasDocuments:
          count: 1
      - equal:
          path: spec.type
          value: LoadBalancer
  - it: should allow clusterIP configuration http
    set:
      console.https_port:
    asserts:
      - equal:
          path: spec.type
          value: ClusterIP
      - contains:
          path: spec.ports
          content:
            name: nginx
            port: 443
            protocol: TCP
            targetPort: 443
  - it: should allow external IP configuration (metrics.service.externalIPs)
    set:
      metrics.service.externalIPs: [ 1.2.3.4, 5.6.7.8 ]
    asserts:
      - contains:
          path: spec.externalIPs
          content:
            1.2.3.4
      - contains:
          path: spec.externalIPs
          content:
            5.6.7.8
  - it: should allow external IP configuration (metrics.externalIP)
    set:
      metrics.externalIP: 4.5.6.7
    asserts:
      - contains:
          path: spec.externalIPs
          content:
            4.5.6.7
  - it: should allow external IP configuration (kube.external_ip)
    set:
      kube.external_ip: 4.5.6.7
    asserts:
      - contains:
          path: spec.externalIPs
          content:
            4.5.6.7
  - it: should allow external IP configuration (kube.external_ips)
    set:
      kube.external_ips: [ 1.2.3.4, 5.6.7.8 ]
    asserts:
      - contains:
          path: spec.externalIPs
          content:
            1.2.3.4
      - contains:
          path: spec.externalIPs
          content:
            5.6.7.8
  - it: should allow external name configuration
    set:
      metrics.service.externalName: test_name
    asserts:
      - equal:
          path: spec.externalName
          value: test_name
  - it: should allow annotations
    set:
      metrics.service.annotations:
      - service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    asserts:
      - contains:
          path: metadata.annotations
          content:
           service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
  - it: should allow annotations (multiple)
    set:
      metrics.service.annotations:
      - service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
      - service.beta.kubernetes.io/aws-load-balancer-connection-draining-timeout: "60"
    asserts:
      - contains:
          path: metadata.annotations
          content:
           service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
      - contains:
          path: metadata.annotations
          content:
           service.beta.kubernetes.io/aws-load-balancer-connection-draining-timeout: "60"
  - it: should support legacy service port configuration
    set:
      kube.external_ips: [ 1.2.3.4, 5.6.7.8 ]
      kube.external_metrics_port: 8910
      metrics.service.servicePort: 22233
    asserts:
      - contains:
          path: spec.externalIPs
          content:
            1.2.3.4
      - contains:
          path: spec.ports
          content:
            name: nginx
            port: 8910
            protocol: TCP
            targetPort: 443
  - it: should support legacy service port configuration (only with kube.external_ips)
    set:
      kube.external_metrics_port: 8910
      metrics.service.servicePort: 22233
    asserts:
      - contains:
          path: spec.ports
          content:
            name: nginx
            port: 22233
            protocol: TCP
            targetPort: 443
  - it: should support legacy default service port configuration (only with kube.external_ips)
    set:
      kube.external_ips: [ 1.2.3.4, 5.6.7.8 ]
      metrics.service.servicePort: 22233
    asserts:
      - contains:
          path: spec.ports
          content:
            name: nginx
            port: 7443
            protocol: TCP
            targetPort: 443
